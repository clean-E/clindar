type User {
  email: String!
  nickname: String!
  myGroupList: [String]
  myRecord: [MyRecord]
}

type MyRecord {
  spotName: String!
  records: [Record]!
}

type Record {
  level: String!
  nameOrColor: String
  count: Int!
}

type Spot {
  _id: String
  spotName: String!
  spotBranch: String!
  address: String!
  phase: [Phase]!
  category: [String]!
}

type Phase {
  level: String!
  nameOrColor: String!
}

type Schedule {
  _id: String
  category: [String]!
  when: String!
  where: String!
  who: Who!
  memo: String!
  group: String!
}

type Who {
  host: String!
  guest: [Guest]!
}

type Guest {
  nickname: String!
  record: [Record]!
}

type Group {
  _id: String
  gname: String!
  leader: String!
  createdAt: String!
  description: String!
  memberList: [String]!
  mainCatecory: String!
  age: [Number]!
  secret: Boolean!
  password: String
  schedules: [Schedule]!
  join: Boolean!
}

type Result {
  success: Boolean!
}

input UserInput {
  email: String
  nickname: String
}

input RecordInput {
  email: String!
  scheduleId: String!
  record: [Record]!
}

input ScheduleInput {
  category: [String]!
  when: String!
  where: String!
  who: Who!
  memo: String!
  group: String!
}

input GroupInput {
  gname: String!
  leader: String!
  createdAt: String!
  description: String!
  mainCatecory: String!
  age: [Number]!
  secret: Boolean!
  password: String
}

type Query {
  getMyPage(email: String): User!
  getAllUser: [User]!

  getMySchedule(email: String): [Schedule]!
  getScheduleDetail(scheduleId: String): Schedule!

  getAllSpot: [Spot!]!
  getSpotDetail(spotId: String): Spot!

  getAllGroup: [Group]!
  getMyGroup(email: String): [Group]!
  getGroupDetail(groupId: String): Group!
  openSecretGroup(groupId: String, password: String): Group!
}

type Mutation {
  login(userInfo: UserInput): User!
  setNickname(userInfo: UserInput): User!
  deleteUser(email: String): Result!

  createSchedule(schedule: ScheduleInput, email: String): Schedule!
  editSchedule(
    scheduleId: String
    schedule: ScheduleInput
    email: String
  ): Schedule!
  deleteSchedule(scheduleId: String, email: String): Result!
  joinSchedule(scheduleId: String, email: String): Schedule!
  comeoutSchedule(scheduleId: String, email: String): Schedule!
  inviteSchedule(scheduleId: String, email: String, guest: String): Schedule!

  editRecord(records: RecordInput): Schedule!

  createGroup(group: GroupInput, email: String): Group!
  editGroup(groupId: String, group: GroupInput, email: String): Group!
  joinGroup(groupId: String, email: String): Group!
  leaveGroup(groupId: String, email: String): Group!
  deleteGroup(groupId: String, email: String): Result!
  changeLeader(groupId: String, email: String, newLeader: String): Group!
}
